// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/09/Square/Square.jack

/**
 * The Square class implements a graphic square. A graphic square 
 * has a location on the screen and a size. It also has methods 
 * for drawing, erasing, moving on the screen, and changing its size.
 */
class Square {

    // Location on the screen
    field int x, y;

    // The size of the square
    field int size;

    /** Constructs a new square with a given location and size. */
    constructor Square new(int Ax, int Ay, int Asize) {
        let x = Ax;
        let y = Ay;
        let size = Asize;


        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int getX(){
	return x;
    }

    method int getY(){
	return y;
    }

    method int getSize(){
	return size;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Moves up by 1. */
    method void moveUp() {
        if (y > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, (y + size), x + size, y + size);
            let y = y - 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y);
        }
        return;
    }

    /** Moves down by 1. */
    method void moveDown() {
        if ((y + size) < 254) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y);
            let y = y + 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + size), x + size, y + size);
        }
        return;
    }

    /** Moves left by 1. */
    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + size), y, x + size, y + size);
            let x = x - 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x, y + size);
        }
        return;
    }

    /** Moves right by 1. */
    method void moveRight() {
        if ((x + size) < 510) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x, y + size);
            let x = x + 1;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + size), y, x + size, y + size);
        }
        return;
    }
}
