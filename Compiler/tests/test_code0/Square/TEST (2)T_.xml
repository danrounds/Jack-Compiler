<tokens>
<identifier> THIS </identifier>
<identifier> is </identifier>
<identifier> A </identifier>
<identifier> test </identifier>
<identifier> IT </identifier>
<identifier> is </identifier>
<identifier> ONLY </identifier>
<identifier> a </identifier>
<identifier> TEST </identifier>
<identifier> hopefully </identifier>
<identifier> THIS </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<identifier> shit </identifier>
<identifier> will </identifier>
<identifier> work </identifier>
<symbol> . </symbol>
<keyword> if </keyword>
<identifier> it </identifier>
<identifier> doesn </identifier>
<symbol> | </symbol>
<identifier> t </identifier>
<symbol> , </symbol>
<identifier> then </identifier>
<identifier> it </identifier>
<symbol> | </symbol>
<identifier> s </identifier>
<identifier> back </identifier>
<identifier> to </identifier>
<identifier> the </identifier>
<identifier> fucking </identifier>
<identifier> drawing </identifier>
<identifier> board </identifier>
<symbol> . </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> dispose </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> square </identifier>
<symbol> . </symbol>
<identifier> dispose </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> deAlloc </identifier>
<symbol> ( </symbol>
<keyword> this </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
</tokens>